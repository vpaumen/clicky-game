{"version":3,"sources":["components/Footer/index.js","components/Wrapper/index.js","components/Hero/index.js","components/Container/index.js","components/Navbar/index.js","components/Row/index.js","components/Col/index.js","components/Card/index.js","App.js","index.js"],"names":["Footer","react_default","a","createElement","className","Wrapper","props","Object","assign","Hero","style","backgroundImage","concat","children","Container","fluid","Navbar","Row","Col","size","split","map","join","Card","id","onClick","handleClick","image","aria-hidden","App","state","score","topScore","characters","message","clickedChars","handleIncrement","newScore","_this","setState","handleReset","doShuffle","indexOf","shuffledChars","array","i","length","j","Math","floor","random","temp","shuffleArray","_this2","this","components_Wrapper","components_Navbar","components_Hero","components_Container","marginTop","components_Row","components_Col","character","components_Card","setCharacter","key","name","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.db67f38e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Clicky-Game 2019 vpaumen</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\n//import { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar(props) {\n  return (\n    // <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top  \">\n\n    //       <span>Clicky Game</span>\n    //       <span>Click an image to begin!</span>\n    //       <span>Score: 0 | Top Score: 0</span>\n      \n\n    // </nav>\n    <div className=\"nav\">\n    {props.children}\n  </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\n//import CardBtn from \"../CardBtn\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div\n      className=\"card\"\n      id={props.id}\n      onClick={() => props.handleClick(props.id)}\n      style={{\n        backgroundImage: props.image ? `url(${props.image})` : \"none\"\n      }}\n    >\n      {!props.image && <i className=\"fa fa-spinner fa-spin\" aria-hidden=\"true\" />}\n\n    </div>\n  );\n}\n\nexport default Card;\n","//import React from \"react\";\n//import { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n//import About from \"./pages/About\";\n\n// import Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport React, { Component } from \"react\";\nimport Hero from \"./components/Hero\";\nimport Container from \"./components/Container\";\nimport Navbar from \"./components/Navbar\";\nimport Row from \"./components/Row\";\nimport Col from \"./components/Col\";\nimport Card from \"./components/Card\";\nimport characters from \"./characters.json\";\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    // image: \"\",\n    // match: false,\n    // matchCount: 0\n    score: 0,\n    topScore: 0,\n    characters,\n    message : \"\",\n    clickedChars: []\n  };\n\n  // componentDidMount() {\n  //   this.loadImages();\n  // }\n\n  handleIncrement = () => {\n\n    // We always use the setState method to update a component's state\n  //  this.setState({ score: this.state.score + 1 });\n\n      const newScore = this.state.score + 1;\n      this.setState({\n        score: newScore,\n        message: \"Correct!\"\n      });\n      if (newScore >= this.state.topScore) {\n        this.setState({ topScore: newScore });\n      }\n      else if (this.state.score === 12) {\n        this.setState({ message: \"You win!\" });\n        this.handleReset();\n      }\n      this.doShuffle();\n  };\n\n  handleClick = id => {\n    if (this.state.clickedChars.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clickedChars: this.state.clickedChars.concat(id) });\n    } else {\n      this.setState({ message: \"You lost. Play again.\" });\n      this.handleReset();\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      score: 0,\n      topScore: this.state.topScore,\n      clickedChars: []\n      //message : \"\"\n    });\n    this.doShuffle();\n  };\n\n  doShuffle = () => {\n    let shuffledChars = shuffleArray(characters);\n    this.setState({ characters: shuffledChars });\n  };\n\nrender() {\n  return (\n    <div>\n        <Wrapper>\n        <div>\n      <Navbar>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top  \">\n\n          <span>Clicky Game</span>\n          <span>Click an image to begin! {this.state.message}</span>\n          <span>Score: {this.state.score} | Top Score: {this.state.topScore}</span>\n\n        </nav>\n      </Navbar>\n      <Hero backgroundImage=\"https://www.google.com/url?sa=i&source=images&cd=&ved=2ahUKEwi_t4PXvYrgAhVMMd8KHWKTAiAQjRx6BAgBEAU&url=http%3A%2F%2Fsavegameonline.com%2Fc1-news%2Fnew-video-goes-behind-scenes-south-park-stick-truth&psig=AOvVaw3xTnj6eQ97sxoWOS9D0k7f&ust=1548557832568910\">\n        <h1>Clicky Game!</h1>\n        <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n      </Hero>\n      <Container style={{ marginTop: 30 }}>\n        <Row>\n          <Col size=\"md-12\">\n          {this.state.characters.map(character => (\n          <Card\n            setCharacter={this.setCharacter}\n            id={character.id}\n            key={character.id}\n            name={character.name}\n            image={character.image}\n            handleIncrement={this.handleIncrement}\n            handleClick={this.handleClick}\n          />\n        ))}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n        </Wrapper>\n        <Footer />\n        </div>\n  );\n}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}